name: Unit tests

on:
  pull_request:
  push:
    branches:
      - master
      - stable
      - rc/**
  workflow_dispatch:

jobs:
  style:
    name: Style
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v2
      - name: hlint
        run: |
          set -ex
          ./etc/scripts/get-hlint.sh
          export PATH="$(pwd)"/hlint:$PATH
          hlint src/
          hlint src/ --cpp-define=WINDOWS=1
          hlint test/ --cpp-simple
  pedantic:
    name: Pedantic
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Pedantic build
        run: stack --system-ghc build --pedantic
  unit-tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          stack-yaml: stack.yaml
          extra-suffix: ""
          stack-args: ""
        - os: ubuntu-latest
          stack-yaml: stack.yaml
          extra-suffix: "alpine"
          stack-args: "--docker --system-ghc --no-install-ghc --flag stack:static"
        - os: ubuntu-latest
          stack-yaml: stack-ghc-902.yaml
          extra-suffix: ""
          stack-args: ""
        - os: windows-latest
          stack-yaml: stack.yaml
          extra-suffix: ""
          stack-args: ""
        - os: windows-latest
          stack-yaml: stack-ghc-902.yaml
          extra-suffix: ""
          stack-args: ""
        - os: macos-latest
          stack-yaml: stack.yaml
          extra-suffix: ""
          stack-args: ""
    steps:
      - name: Clone project
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ hashFiles( matrix.stack-yaml ) }}-${{ matrix.extra-suffix }}
      - shell: bash
        run: |
          set -ex
          stack upgrade || curl -sSL https://get.haskellstack.org/ | sh -s - -f

          if [[ "${{ matrix.extra-suffix }}" == "alpine" ]]
          then
              touch ~/.stack/config.yaml
              cat > ~/.stack/config.yaml <<EOF
              extra-include-dirs:
              - /usr/include
              extra-lib-dirs:
              - /lib
              - /usr/lib
              EOF
          else
             echo "else case"
          fi
          stack test ${{ matrix.stack-args }} --haddock --no-haddock-deps --ghc-options="-Werror -O0" --copy-bins --local-bin-path bin

          # Get output about whether the exe is dynamically linked
          if [[ "${{ matrix.os }}" == "macos-latest" ]]
          then
              echo "Skipping ldd check on Mac"
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
              echo "Skipping ldd check on Windows"
          elif [[ "${{ matrix.extra-suffix }}" == "alpine" ]]
          then
              # ldd returns exit code 1 if it's static, so failure is success
              (ldd ./bin/stack && exit 1) || true
          else
              ldd ./bin/stack
          fi

          ./bin/stack --version
